//Angular code
import { Component } from '@angular/core';
import { Router } from '@angular/router';
import { FormsModule } from '@angular/forms';
import { HttpClientModule } from '@angular/common/http';
import { HttpClient } from '@angular/common/http';

@Component({
 selector: 'app-root',
 templateUrl: './app.component.html',
 styleUrls: ['./app.component.css']
})
export class AppComponent {
 title = 'login-form';
 //user input
 userName: string;
 password: string;

 //constructor
 constructor(private http: HttpClient, private router: Router) {
 }

 //function to login
 login() {
   let userData = {
     username: this.userName,
     password: this.password
   };
   //API call to server
   this.http.post('http://localhost:50000/api/login', userData).subscribe(data => {
     if (data) {
       //if login successful, navigate to dashboard
       this.router.navigate(['/dashboard']);
     } else {
       //if login fails, display error message
       alert("Invalid username or password");
     }
   });
 }
}

//HTML code
<form (ngSubmit)="login()" class="login-form">
 <h2>Login</h2>
 <input type="text" placeholder="Username" [(ngModel)]="userName" required>
 <input type="password" placeholder="Password" [(ngModel)]="password" required>
 <button type="submit">Login</button>
</form>

//C# code
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Hosting;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Routing;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;
using Microsoft.Extensions.Logging;

namespace WebApplication1
{
 public class Startup
 {
   public void ConfigureServices(IServiceCollection services)
   {
     services.AddControllersWithViews();
   }

   public void Configure(IApplicationBuilder app, IWebHostEnvironment env)
   {
     if (env.IsDevelopment())
     {
       app.UseDeveloperExceptionPage();
     }
     app.UseRouting();
     app.UseEndpoints(endpoints =>
     {
       endpoints.MapControllers();
     });
   }
 }

 [Route("api/[controller]")]
 [ApiController]
 public class LoginController : ControllerBase
 {
   //function to authenticate user
   [HttpPost]
   public async Task<ActionResult> Login([FromBody] User user)
   {
     //check if user exists in database
     if (user.Username == "admin" && user.Password == "admin123")
     {
       return Ok();
     }
     else
     {
       return BadRequest();
     }
   }
 }
}
